@model Shop.ViewModels.OrderFormViewModel
@{
    ViewBag.Title = "OrderForm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <section class="col-lg-12">
        <div class="box box-danger box-solid ">
            <div class="box-header">
                <!-- tools box -->
                <div class="pull-left box-tools">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
                </div>
                <!-- /. tools -->
                <i class="fa fa-error"></i>
                <h3 class="box-title">
                    سیستم خطایاب
                </h3>
            </div>
            <div class="box-body">
                <div class="tab-content no-padding">
                    <div class="col-md-12 ">
                        <p>درصورتی که محصول شما دارای شرایط ثبتی نباشد ،موارد اصلاحیه در اینجا به اطلاع شما می رسد.</p>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>



<div class="row">
    <section class="col-lg-12">
        <div class="box box-primary box-solid">
            <div class="box-body">
                <div class="tab-content no-padding">
                    <div class="col-md-12 ">
                        <a class="btn btn-primary" href="~/Orders/All_Orders"> بازگشت به لیست سفارشات </a>
                        <a class="btn btn-primary" href="~/OrderCopons/Index"> کوپن ها </a>
                       
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@using (Html.BeginForm("Save", "Orders", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    <div class="row">
        <section class="col-lg-12">
            <div class="box box-success box-solid">
                <div class="box-body">
                    <div class="tab-content no-padding">
                        <div class="col-md-12 ">
                            <input type="submit" class="btn btn-success" value="ثبت سفارش" />

                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    @Html.AntiForgeryToken()

    <div class="row">
        <!-- right col -->
        <section class="col-lg-7 connectedSortable">
            <!--Name-->
            <div class="box box-success box-solid collapsed-box">
                <div class="box-header">
                    <!-- tools box -->
                    <div class="pull-left box-tools">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                    <!-- /. tools -->
                    <i class="fa fa-product-hunt"></i>
                    <h3 class="box-title">
                       سفارش جدید
                    </h3>
                </div>
                <div class="box-body">
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.FactorNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.FactorNumber, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.FactorNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.UserCompany, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.UserCompany, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.UserCompany, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.UserStreet, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.UserStreet, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.UserStreet, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.UserSuburb, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.UserSuburb, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.UserSuburb, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.OrderStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(m => m.OrderStatusId, new SelectList(Model.OrderStatuses, "Id", "Name"), new { @class = " js-example-basic-single ", @style = "width:900px;" })
                            @Html.ValidationMessageFor(model => model.OrderStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.OrderCoponId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(m => m.OrderCoponId, new SelectList(Model.OrderCopons, "Id", "Name"), new { @class = " js-example-basic-single ", @style = "width:900px;" })
                            @Html.ValidationMessageFor(model => model.OrderCoponId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="tab-content no-padding">
                        @Html.LabelFor(model => model.PaymentRecipe, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PaymentRecipe, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.PaymentRecipe, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
               
              
            </div>
            <!--End-->
        </section>
        <!-- /.right col -->
       


    </div>



}
@section scripts
    {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('.js-example-basic-single').select2({
                dir: "rtl"
            });


        });

        function show(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#user_img').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }




    </script>



}



